@import '@styles/colors';
@import '@styles/mixins';
@import '@styles/keyframes';

$size-times: var(--button-container-size-times);

.contactPage {
	height: 100%;
	width: 100%;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	gap: 3rem;

	.inputsContainer {
		display: var(--mobile-form);
		flex-direction: column;
		justify-content: center;
		gap: 1rem;
	}

	form {
		@include for_breakpoint(desktop fourK) {
			width: 50rem;
		}
		@include for_breakpoint(tablet) {
			width: 40rem;
		}
		@include for_breakpoint(mobile) {
			width: 90vw;
		}

		h1 {
			align-self: flex-start;
			font-weight: 400;
			font-size: 3rem;
			margin: 1rem 0;
		}

		.textarea {
			position: relative;
			caret-color: transparent;
			background: $apricot;
			width: 100%;

			&:hover {
				box-shadow: 0.25rem 0.5rem $old-lavender;
				transition: 0.1s ease-in-out;
			}

			&::after {
				content: '';
				background: $old-lavender;
				height: 1.5rem;
				z-index: 1;
				position: absolute;
				animation: blinking 0.75s infinite;
				@include for_breakpoint(tablet mobile) {
					width: 1.25ch;
				}
				@include for_breakpoint(desktop) {
					width: 1.5ch;
				}
			}

			&.input::after {
				top: 1rem;
			}

			@keyframes blinking {
				75% {
					opacity: 0;
				}
			}

			input {
				background: $apricot;
				border: 0.15rem solid $english-lavender;
				height: 100%;
				width: 100%;
        font-size: 1.5rem;
				outline: none;
				color: $old-lavender;
				padding: 0 1rem;

				&::placeholder {
					color: $old-lavender-faded;
				}

				&:-webkit-autofill,
				&:-webkit-autofill:focus,
				&:-webkit-autofill:hover,
				&:-webkit-autofill:active,
				&:-internal-autofill-selected {
					color: $old-lavender !important;
					-webkit-text-fill-color: $old-lavender !important;
					box-shadow: 0 0 0px 1000px $apricot inset;
					background-color: $apricot !important;
					background-image: none !important;
				}

				&:-webkit-autofill::first-line {
					font-family: 'Fixedsys', 'sans-serif' !important;
					font-size: 1.5rem !important;
					font-weight: 400 !important;
				}
			}

			textarea {
        margin-bottom: 2rem;
        height: calc(var(--textarea-height) - 2.75rem);
				width: 100%;
				font-size: 1.5rem;
				background: $apricot;
				border: none;
				outline: none;
				resize: none;
				color: $old-lavender;
				padding: 1rem;
				padding-bottom: 0;

				&::placeholder {
					color: $old-lavender-faded;
				}
			}
		}

		.input {
			@extend .textarea;
      height: 3.5rem;
		}

		.buttonContainer {
			margin-top: 1rem;
			align-self: center;
			display: flex;
			flex-direction: var(--flex-direction);
			align-items: center;
			justify-content: center;
			gap: var(--msg-flex-gap);
			height: calc(8rem * $size-times);

			.sending {
				font-size: calc(1.25rem * $size-times);
			}

			.error {
				width: calc(3.5rem * $size-times);
				height: calc(3.5rem * $size-times);
				background-image: linear-gradient(to bottom right, transparent 50%, $pastel-pink 0),
					linear-gradient(to top right, $pastel-pink 50%, transparent 0);
				background-size: 50% 100%;
				background-repeat: no-repeat;
				background-position: left, right;
				display: flex;
				justify-content: center;
				align-items: center;
				font-size: calc(2rem * $size-times);
				padding-top: calc(0.5rem * $size-times);
			}

			.errorMsg {
				font-size: calc(1.25rem * $size-times);
			}

			.msgSent {
				position: relative;
				width: calc(5rem * $size-times);
				height: calc(2.5rem * $size-times);
				background: $apricot;
				border-top: $old-lavender calc(0.2rem * $size-times) solid;
				z-index: 3;

				&::after {
					content: 'Sent!';
					font-size: 0rem;
					color: $old-lavender;
					position: absolute;
					top: calc(-3rem * $size-times);
					transform: translate(-50%);
					left: 50%;
					animation: grow 1s 1s forwards;
				}
			}

			.sentBlock {
				color: $apricot;
				position: relative;
				width: calc(2rem * $size-times);
				height: calc(2rem * $size-times);
				margin-left: calc(-0.1rem * $size-times);
				margin-bottom: calc(0.5rem * $size-times);
				background: $old-lavender;
				animation: dropIn 1s forwards;

				&::before {
					content: 'â¬‡';
					color: #fff;
					font-size: calc(1rem * $size-times);
					display: flex;
					justify-content: center;
					align-items: center;
					position: absolute;
					width: calc(2rem * $size-times);
					height: calc(2rem * $size-times);
					top: calc(-0.2rem * $size-times);
					left: calc(-0.2rem * $size-times);
					margin-bottom: calc(0.5rem * $size-times);
					background: $english-lavender;
				}
			}

			@keyframes dropIn {
				10% {
					transform: translateY(calc(0.1rem * $size-times));
				}
				20% {
					transform: translateY(calc(-0.1rem * $size-times));
				}
				100% {
					transform: translateY(calc(3rem * $size-times));
				}
			}

			@keyframes grow {
				60% {
					font-size: calc(1.55rem * $size-times);
				}
				80% {
					font-size: calc(1.45rem * $size-times);
				}
				100% {
					font-size: calc(1.5rem * $size-times);
				}
			}

			button {
				font-size: 1.5rem;
				background: $english-lavender;
				width: fit-content;
				width: 7.5rem;
				height: 4rem;
				color: #fff;
				position: relative;
				display: flex;
				justify-content: center;
				align-items: center;
				gap: 0.25rem;

				img {
					filter: invert(1);
					height: 1.75rem;
					width: 1.75rem;
					margin-top: 0.2rem;
				}

				&:hover {
					span {
						animation: pointRight 1s infinite;
					}
				}

				span {
					font-size: 2rem;
					margin-bottom: 0.25rem;
				}

				&::before {
					position: absolute;
					content: '';
					background: $old-lavender;
					width: 100%;
					height: 100%;
					z-index: -1;
					left: 0.25rem;
				}

				&:hover::before {
					top: 0.5rem;
					transition: 0.1s ease-in-out;
				}

				&:not(:hover)::before {
					top: 0.25rem;
					transition: 0.1s ease-in-out;
				}

				&:active {
					background: $melon;
					color: $old-lavender;

					img {
						filter: invert(0);
					}
				}

				&:active::before {
					filter: blur(2px);
				}
			}
		}
	}
}

.inputFocus {
	box-shadow: 0.5rem 0.25rem $old-lavender;
	transition: 0.1s ease-in-out;

	input {
		border: 0.15rem solid $pastel-pink !important;
		transition: 0.1s ease-in-out;
	}
}

.inputBlur {
	box-shadow: 0.25rem 0.25rem $old-lavender;
	transition: 0.1s ease-in-out;

	input {
		border: 0.15rem solid $english-lavender !important;
		transition: 0.1s ease-in-out;
	}
}

.textareaFocus {
	@extend .inputFocus;
	border: 0.15rem solid $pastel-pink !important;
}

.textareaBlur {
	@extend .inputBlur;
	border: 0.15rem solid $english-lavender !important;
}
